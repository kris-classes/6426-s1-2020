"""
ISCG6426 Assignment
pip install --upgrade pyxel
See https://github.com/kitao/pyxel for library
Pyxel Discord: https://discord.gg/jNRYyXn
More examples: https://github.com/kris-classes/pyxel-snippets
"""
import pyxel
import random


class App:

    def __init__(self):
        # Initialize a window. Max size is 256x256 pixels.
        pyxel.init(250, 190, caption="QUEUE DATA STRUCTURE VISUALISATION")
        self.queue = Queue()
        pyxel.mouse(True)
        self.ENQUEUE = False
        self.DEQUEUE = False


        # Clear the screen with color 0 (black). Max color is 15.
        pyxel.cls(0)

        pyxel.run(self.update, self.draw)



    def draw(self):
        # Always remember to clear the screen.
        pyxel.cls(0)


        pyxel.rect(50, 100, 15, 15, 7)

        pyxel.rect(80, 100, 15, 15, 7)

        pyxel.rect(110, 100, 15, 15, 7)


        pyxel.rect(140, 100, 15, 15, 7)


        pyxel.rect(170, 100, 15, 15, 7)


        if self.ENQUEUE:
            pyxel.rect(20, 10, 64, 15, 6)
            pyxel.text(35, 15, "Enqueue", 9)
        else:
            pyxel.rect(20, 10, 64, 15, 9)
            pyxel.text(35, 15, "Enqueue", 6)

        if self.DEQUEUE:
            pyxel.rect(160, 10, 64, 15, 6)
            pyxel.text(180, 15, "Dequeue", 9)
        else:
            pyxel.rect(160, 10, 64, 15, 9)
            pyxel.text(180, 15, "Dequeue", 6)





class Queue:

    def __init__(self):
        self.queue =[]

    def queue_isEmpty(self):
        return self.queue == []

    def queue_isFull(self):
        if len(self.queue) < 6:
            return True
    def enqueue(self,data):
        if data not in self.queue:
            self.queue.insert(0, data)
            return True
        return False

    def dequeue(self):
        data = self.queue[0]
        del self.queue[0]
        return data

    def printQueue(self):
        return self.queue

queue = Queue()
App()